?kcca
??kcca
library(readr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(cluster)
library(fpc)
library(Gmedian)
dados <- read_csv("dados/logs.txt", col_names = c("mes", "dia_do_mes", "hora", "maquina", "status", "usuario"))
setwd("Programas/Universidade/guardians/guardiansAnalytics/dados/")
dados <- read_csv("dados/logs.txt", col_names = c("mes", "dia_do_mes", "hora", "maquina", "status", "usuario"))
setwd("../")
dados <- read_csv("dados/logs.txt", col_names = c("mes", "dia_do_mes", "hora", "maquina", "status", "usuario"))
dados <- dados %>% mutate(data = paste("2017", mes, dia_do_mes, sep = "-"), dia_da_semana = wday(data, label = T))
sessoes_abertas <- dados %>% filter(status == "opened")
# super data frame com todos os dados
super <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
super <- super %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
super <- super %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:14, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- super %>% mutate(lab = r$lab)
# acessos por lab
lab <- super
lab<- lab %>% group_by(lab, usuario) %>% mutate(n_acessos=n()) #%>%
inner_join(lab, by='usuario')
head(lab)
# acessos pelo dia do mes e da semana
sessoes <- sessoes_abertas %>% subset(select=c("dia_da_semana", "dia_do_mes"))
sessoes_abertas <- sessoes_abertas %>% mutate(lab = r$lab)
sessoes_abertas <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
sessoes_abertas <- sessoes_abertas %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
# sessoes por blocos de 2 horas
sessoes_abertas <- sessoes_abertas %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:13, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
sessoes_abertas %>% ggplot(aes(x = horario)) + geom_bar() # 14h as 16h é o horário de pico
acessos_usuarios <- sessoes_abertas %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
teste <- super %>% subset(select = c("usuario","lab"))# Seleciona apenas os atributos que me interessam
teste <- teste %>% group_by(usuario,lab) %>% summarise(num_acessos = n()) # Sumarizo os acessos
a <- teste %>% filter(lab == "lcc1") # Filtro de acordo com o meu interesse
names(a)[3] <- c("lcc1") # Nomeio a coluna
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario") # Agrupo com o dataframe principal
teste <- super %>% subset(select = c("usuario","lab"))
teste <- teste %>% group_by(usuario,lab) %>% summarise(num_acessos = n())
a <- teste %>% filter(lab == "lcc2")
names(a)[3] <- c("lcc2")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Mon")
names(a)[3] <- c("Mon")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Tues")
names(a)[3] <- c("Tues")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Wed")
names(a)[3] <- c("Wed")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Thurs")
names(a)[3] <- c("Thurs")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Fri")
names(a)[3] <- c("Fri")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "06-08")
names(a)[3] <- c("6h-8h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "08-10")
names(a)[3] <- c("8h-10h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "10-12")
names(a)[3] <- c("10h-12h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "12-13")
names(a)[3] <- c("12h-14h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "14-16")
names(a)[3] <- c("14h-16h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "16-18")
names(a)[3] <- c("16h-18h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "18h+")
names(a)[3] <- c("18h+")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
acessos_usuarios[,1:16][is.na(acessos_usuarios[,1:16])] <- 0 # Substituindo os NA por zero
dataKmeans <- acessos_usuarios %>% subset(select = c("num_acessos","6h-8h","8h-10h","10h-12h","12h-14h","14h-16h","16h-18h","18h+")) # filtrando para apenas número de acessos e horários
# Tentando identificar possíveis outliers com um boxplot
mediana_acessos <- dataKmeans %>% mutate(Mediana = median(num_acessos))
mediana_acessos %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
######################### Vendo o silhouette #############################
distancia = as.matrix(dist(dataKmeans)) # Matriz de dissimilaridade
clus <- kmeans(dataKmeans,centers = 2)
sil1 <- mean(silhouette(clus$cluster,dmatrix = distancia^2)[,3]) # Silhouette com 2 centros
dataSil <- data.frame(centros = 2,distSil = sil1)
for(i in 3:10){ # Silhouette de 3 a 10 centros
set.seed(10)
clus = kmeans(dataKmeans,centers = i)
sill <- mean(silhouette(clus$cluster,dmatrix = distancia^2)[,3])
dfAux <-  data.frame(centros = i,distSil = sill)
dataSil <- rbind(dataSil,dfAux)
}
dataSil %>% ggplot(aes(x = centros,y = distSil)) + geom_line() # plotando o gráfico
############ K-MEANS ############
clus <- kmeans(dataKmeans,centers = 2) # kmeans com 2 centros
clus$centers # Verificando os centros
table(clus$cluster) # Vendo quantos pontos estão em cada grupo
clusplot(dataKmeans,clus$cluster,color = T,shade = T) # plotando o gráfico do kmeans
########### Pegando os dados do número de acessos até o  3 quartil ###################
summary(dataKmeans) # Verificando média,mediana e quartis
dadosMenores = dataKmeans %>% filter(num_acessos <= 19) # Filtrando o acesso até o 3 quartil
# Tentando identificar possíveis outliers com um boxplot
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
######### Silhouette de dadosMenores ############
distancia = as.matrix(dist(dadosMenores)) # Matriz de dissimilaridade
clus2 <- kmeans(dadosMenores,centers = 2)
sil11 <- mean(silhouette(clus2$cluster,dmatrix = distancia^2)[,3]) # Silhouette com 2 centros
dfSil <- data.frame(centros = 2,distS = sil11)
set.seed(12)
for(i in 3:10){ # Silhouette de 3 a 10 centros
clus2 = kmeans(dadosMenores,centers = i)
silT <- mean(silhouette(clus2$cluster,dmatrix = distancia^2)[,3])
df2 <-  data.frame(centros = i,distS = silT)
dfSil <- rbind(dfSil,df2)
}
dfSil %>% ggplot(aes(x = centros,y = distS)) + geom_line() # plotando o gráfico
############# kmeans do dadosMenores ############
clus2 <- kmeans(dadosMenores, centers = 2) # kmeans desse df com 2 centros
clusplot(dadosMenores,clus2$cluster,color = T, shade = T) # Plotagem do kmeans
table(clus2$cluster) # Quantidade de usuários em cada cluster
clus2$centers # Verificando os dados dos centros
acessoCluster <- kcca(acessos_usuarios$num_acessos, k=3, family=kccaFamily("kmedians"),save.data=TRUE)
acessoCluster
plot(acessoCluster)
acessoCluster <- kcca(dataKmeans, k=8, family=kccaFamily("kmedians"),save.data=TRUE)
acessoCluster1 <- kGmedian(dataKmeans, ncenters=2)
acessoCluster1
plot(acessoCluster1)
##### Olhando usuários com apenas um acesso ######
super <- super %>% group_by(usuario) %>% mutate(n_acessos=n()) # adicionando a coluna n_acessos no super
dadosUmAcesso <- super %>% group_by(usuario) %>% filter(n_acessos == 1) # filtando usuários com apenas um acesso
dadosUmAcesso %>% ggplot(aes(x = dia_do_mes)) + geom_bar() # plotando dia do mês
dadosUmAcesso %>% ggplot(aes(x = dia_da_semana)) + geom_bar() # plotando dia da semana
dadosUmAcesso %>% ggplot(aes(x = lab)) + geom_bar() # plotando lab
dadosUmAcesso %>% ggplot(aes(x = horario)) + geom_bar() # plotando horário(blocos de 2 horas)
plot(dataKmeans, col = acessoCluster1$cluster, main="kmedian")
points(acessoCluster1$centers, col = 1:2, pch = 8, cex = 2)
plot(dataKmeans, col = acessoCluster1$cluster, main="kmedian")
points(acessoCluster1$centers, col = 1:2, pch = 8, cex = 2)
points(acessoCluster1$centers, col = 1:2, pch = 8, cex = 2)
acessoCluster1 <- kGmedian(dataKmeans, ncenters=2)
acessoCluster1
plot(acessoCluster1)
plot(x, col = acessoCluster1$cluster, main="kmedian")
plot(dataKmeans, col = acessoCluster1$cluster, main="kmedian")
points(acessoCluster1$centers, col = 1:2, pch = 8, cex = 2)
acessoCluster1$cluster
acessoCluster1$centers
centros <- acessoCluster1$centers
centros <- as.data.frame(acessoCluster1$centers)
centros
