sessoes_abertas <- dados %>% filter(status == "opened")
super <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
super <- super %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
super <- super %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:14, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- super %>% mutate(lab = r$lab)
lab <- super
lab<- lab %>% group_by(lab, usuario) %>% mutate(n_acessos=n()) #%>%
inner_join(lab, by='usuario')
lab
sessoes <- sessoes_abertas %>% subset(select=c("dia_da_semana", "dia_do_mes"))
freq_dia <- sessoes %>% group_by(dia_da_semana, dia_do_mes) %>% summarise(num_acessos = n())
freq_dia %>% ggplot(aes(x = dia_do_mes, y = num_acessos, fill = dia_da_semana)) + geom_bar(stat = "identity")
freq_mensal <- freq_dia %>% group_by(dia_da_semana) %>% summarise(media_acessos = mean(num_acessos)) # Os mts de lp1 não estão computados
freq_mensal %>% ggplot(aes(x = dia_da_semana, y = media_acessos)) + geom_bar(stat = "identity")
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
sessoes_abertas <- sessoes_abertas %>% mutate(lab = r$lab)
sessoes_abertas <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
sessoes_abertas <- sessoes_abertas %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
sessoes_abertas <- sessoes_abertas %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:13, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
sessoes_abertas %>% ggplot(aes(x = horario)) + geom_bar() # 14h as 16h é o horário de pico
sessoes_abertas %>% ggplot(aes(x = lab)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = turno)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = hora_pura)) + geom_bar() # ao contrario do que se esperava,
lcc2_acesso <- sessoes_abertas %>% filter(lab == "lcc2")
lcc2_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar()
lcc1_acesso <- sessoes_abertas %>% filter(lab == "lcc1")
lcc1_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar() # maior quantudade de acesso as 14 hrs
lcc1_acesso %>% ggplot(aes(x = dia_da_semana)) + geom_bar()
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
acessos_usuarios <- sessoes_abertas %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
mediana_acessos <- acessos_usuarios %>% mutate(Mediana = median(num_acessos))
mediana_acessos %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
View(acessos_usuarios)
rm(list = ls())
library(tidyverse)
library(readr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(cluster) # Adicionei pra plotar o kmeans
library(fpc) # Adicionei pra plotar o kmeans
setwd("/Users/amandaluna/Documents/guardiansAnalytics") # workspace Amanda
dados <- read_csv("logs.txt", col_names = c("mes", "dia_do_mes", "hora", "maquina", "status", "usuario"))
dados <- dados %>% mutate(data = paste("2017", mes, dia_do_mes, sep = "-"), dia_da_semana = wday(data, label = T))
sessoes_abertas <- dados %>% filter(status == "opened")
super <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
super <- super %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
super <- super %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:14, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- super %>% mutate(lab = r$lab)
lab <- super
lab<- lab %>% group_by(lab, usuario) %>% mutate(n_acessos=n()) #%>%
inner_join(lab, by='usuario')
lab
sessoes <- sessoes_abertas %>% subset(select=c("dia_da_semana", "dia_do_mes"))
freq_dia <- sessoes %>% group_by(dia_da_semana, dia_do_mes) %>% summarise(num_acessos = n())
freq_dia %>% ggplot(aes(x = dia_do_mes, y = num_acessos, fill = dia_da_semana)) + geom_bar(stat = "identity")
freq_mensal <- freq_dia %>% group_by(dia_da_semana) %>% summarise(media_acessos = mean(num_acessos)) # Os mts de lp1 não estão computados
freq_mensal %>% ggplot(aes(x = dia_da_semana, y = media_acessos)) + geom_bar(stat = "identity")
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
sessoes_abertas <- sessoes_abertas %>% mutate(lab = r$lab)
sessoes_abertas <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
sessoes_abertas <- sessoes_abertas %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
sessoes_abertas <- sessoes_abertas %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:13, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
sessoes_abertas %>% ggplot(aes(x = horario)) + geom_bar() # 14h as 16h é o horário de pico
sessoes_abertas %>% ggplot(aes(x = lab)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = turno)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = hora_pura)) + geom_bar() # ao contrario do que se esperava,
lcc2_acesso <- sessoes_abertas %>% filter(lab == "lcc2")
lcc2_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar()
lcc1_acesso <- sessoes_abertas %>% filter(lab == "lcc1")
lcc1_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar() # maior quantudade de acesso as 14 hrs
lcc1_acesso %>% ggplot(aes(x = dia_da_semana)) + geom_bar()
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
acessos_usuarios <- sessoes_abertas %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
sessoes_por_maquina <- sessoes_abertas %>% subset(select=c("maquina"))
acessos_maquinas <- sessoes_por_maquina %>% group_by(maquina) %>% summarise(num_acessos = n())
acessos_maquinas <- acessos_maquinas[order(acessos_maquinas$num_acessos,decreasing = T),] # As do começo do lcc2
teste <- super %>% subset(select = c("usuario","lab"))# Seleciona apenas os atributos que me interessam
teste <- teste %>% group_by(usuario,lab) %>% summarise(num_acessos = n()) # Sumarizo os acessos
a <- teste %>% filter(lab == "lcc1") # Filtro de acordo com o meu interesse
names(a)[3] <- c("lcc1") # Nomeio a coluna
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario") # Agrupo com o dataframe principal
teste <- super %>% subset(select = c("usuario","lab"))
teste <- teste %>% group_by(usuario,lab) %>% summarise(num_acessos = n())
a <- teste %>% filter(lab == "lcc2")
names(a)[3] <- c("lcc2")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Mon")
names(a)[3] <- c("Mon")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Tues")
names(a)[3] <- c("Tues")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Wed")
names(a)[3] <- c("Wed")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Thurs")
names(a)[3] <- c("Thurs")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Fri")
names(a)[3] <- c("Fri")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "06-08")
names(a)[3] <- c("6h-8h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "08-10")
names(a)[3] <- c("8h-10h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "10-12")
names(a)[3] <- c("10h-12h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "12-13")
names(a)[3] <- c("12h-14h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "14-16")
names(a)[3] <- c("14h-16h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "16-18")
names(a)[3] <- c("16h-18h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "18h+")
names(a)[3] <- c("18h+")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
acessos_usuarios[,1:16][is.na(acessos_usuarios[,1:16])] <- 0 # Substituindo os NA por zero
dataKmeans <- acessos_usuarios %>% subset(select = c("num_acessos","6h-8h","8h-10h","10h-12h","12h-14h","14h-16h","16h-18h","18h+")) # filtrando para apenas número de acessos e horários
mediana_acessos <- dataKmeans %>% mutate(Mediana = median(num_acessos))
mediana_acessos %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
distancia = as.matrix(dist(dataKmeans)) # Matriz de dissimilaridade
clus <- kmeans(dataKmeans,centers = 2)
sil1 <- mean(silhouette(clus$cluster,dmatrix = distancia^2)[,3]) # Silhouette com 2 centros
dataSil <- data.frame(centros = 2,distSil = sil1)
for(i in 3:10){ # Silhouette de 3 a 10 centros
set.seed(10)
clus = kmeans(dataKmeans,centers = i)
sill <- mean(silhouette(clus$cluster,dmatrix = distancia^2)[,3])
dfAux <-  data.frame(centros = i,distSil = sill)
dataSil <- rbind(dataSil,dfAux)
}
dataSil %>% ggplot(aes(x = centros,y = distSil)) + geom_line() # plotando o gráfico
clus <- kmeans(dataKmeans,centers = 2) # kmeans com 2 centros
clus$centers # Verificando os centros
table(clus$cluster) # Vendo quantos pontos estão em cada grupo
clusplot(dataKmeans,clus$cluster,color = T,shade = T) # plotando o gráfico do kmeans
summary(dataKmeans) # Verificando média,mediana e quartis
dadosMenores = dataKmeans %>% filter(num_acessos <= 12) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 25) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 20) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 15) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 17) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 18) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 19) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 20) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 19) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
distancia = as.matrix(dist(dadosMenores)) # Matriz de dissimilaridade
clus2 <- kmeans(dadosMenores,centers = 2)
sil11 <- mean(silhouette(clus2$cluster,dmatrix = distancia^2)[,3]) # Silhouette com 2 centros
dfSil <- data.frame(centros = 2,distS = sil11)
for(i in 3:10){ # Silhouette de 3 a 10 centros
set.seed(12)
clus2 = kmeans(dadosMenores,centers = i)
silT <- mean(silhouette(clus2$cluster,dmatrix = distancia^2)[,3])
df2 <-  data.frame(centros = i,distS = silT)
dfSil <- rbind(dfSil,df2)
}
dfSil %>% ggplot(aes(x = centros,y = distS)) + geom_line() # plotando o gráfico
clus2 <- kmeans(dadosMenores, centers = 2) # kmeans desse df com 2 centros
clusplot(dadosMenores,clus2$cluster,color = T, shade = T) # Plotagem do kmeans
table(clus2$cluster) # Quantidade de usuários em cada cluster
clus2$centers # Verificando os dados dos centros
dadosMenores = dataKmeans %>% filter(num_acessos <= 20) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
dadosMenores = dataKmeans %>% filter(num_acessos <= 19) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
clus2 <- kmeans(dadosMenores, centers = 2) # kmeans desse df com 2 centros
clusplot(dadosMenores,clus2$cluster,color = T, shade = T) # Plotagem do kmeans
table(clus2$cluster) # Quantidade de usuários em cada cluster
clus2$centers # Verificando os dados dos centros
install.packages("flexclust")
library(flexclust)
kmedianas <- kcca(dataKmeans,k = 2, family = kccaFamily("kmedians"),save.data = T)
kmedianas
plot(kmedianas)
kmedianas <- kcca(dataKmeans,k = 3, family = kccaFamily("kmedians"),save.data = T)
kmedianas
plot(kmedianas)
kmedianas <- kcca(dataKmeans,k = 3, family = kccaFamily("kmedians"),save.data = T)
kmedianas
plot(kmedianas)
kmedianas$centers
kmedianasMenor
kmedianasMenor <- kcca(dadosMenores,k = 3, family = kccaFamily("kmedians"),save.data = T)
kmedianasMenor
plot(kmedianasMenor)
kmedianasMenor <- kcca(dadosMenores,k = 15, family = kccaFamily("kmedians"),save.data = T)
kmedianasMenor
plot(kmedianasMenor)
kmedianasMenor <- kcca(dadosMenores,k = 2, family = kccaFamily("kmedians"),save.data = T)
kmedianasMenor
plot(kmedianasMenor)
View(dataKmeans)
quantile(dataKmeans$num_acessos, c(.9, .95, .99, .999) )
x =30/460
x
460/30
plot(dataKmeans, col = acessoCluster1$cluster, main="kmedian")
plot(dataKmeans, col = dataKmeans$num_acessos, main="kmedian")
points(acessoCluster1$centers, col = 1:2, pch = 8, cex = 2)
acessoCluster <- kcca(dataKmeans, k=3, family=kccaFamily("kmedians"),save.data=TRUE)
plot(acessoCluster)
plot(dataKmeans, col = acessoCluster$cluster, main="kmedian")
plot(acessoCluster, col = acessoCluster$cluster, main="kmedian")
plot(acessoCluster)
plot(acessoCluster, col = acessoCluster$cluster, main="kmedian")
acessoCluster <- kcca(dataKmeans, k=3, family=kccaFamily("kmedians"),save.data=TRUE)
plot(acessoCluster)
plot(acessoCluster, col = acessoCluster$cluster, main="kmedian")
acessoCluster
hist(dataKmeans$num_acessos, main = "Histograma dos acessos", xlab = "Número de acessos", ylab = "Frequência") # Histograma dos acessos
mtcars
library(dplyr)
mtcars %>% select(c("mpg","cyl")) %>% filter(cyl > 4)
mtcars %>% filter(cyl > 4)
mtcars <- mtcars %>% mutate(coluna = mpg/cyl)
mtcars
mtcars <- mtcars %>% group_by(mpg) %>% summarise(somas = sum(cyl))
mtcars
mtcars <- mtcars %>% group_by(mpg) %>% summarise(somas = sum(mpg))
mtcars
setwd("~/Documents/guardiansAnalytics")
library(readr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(cluster)
library(cluster)
library(cluster)
library(cluster)
library(fpc)
library(Gmedian)
dados <- read_csv("logs.txt", col_names = c("mes", "dia_do_mes", "hora", "maquina", "status", "usuario"))
dados <- dados %>% mutate(data = paste("2017", mes, dia_do_mes, sep = "-"), dia_da_semana = wday(data, label = T))
sessoes_abertas <- dados %>% filter(status == "opened")
super <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
super <- super %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
super <- super %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:14, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- super %>% mutate(lab = r$lab)
lab <- super
lab <- lab %>% group_by(lab, usuario) %>% mutate(n_acessos=n()) #%>%
head(lab)
sessoes <- sessoes_abertas %>% subset(select=c("dia_da_semana", "dia_do_mes"))
freq_dia <- sessoes %>% group_by(dia_da_semana, dia_do_mes) %>% summarise(num_acessos = n())
freq_dia %>% ggplot(aes(x = dia_do_mes, y = num_acessos, fill = dia_da_semana)) + geom_bar(stat = "identity")
freq_mensal <- freq_dia %>% group_by(dia_da_semana) %>% summarise(media_acessos = mean(num_acessos)) # Os mts de lp1 não estão computados
freq_mensal %>% ggplot(aes(x = dia_da_semana, y = media_acessos)) + geom_bar(stat = "identity")
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
sessoes_abertas <- sessoes_abertas %>% mutate(lab = r$lab)
sessoes_abertas <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
sessoes_abertas <- sessoes_abertas %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
sessoes_abertas <- sessoes_abertas %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:13, "12-14",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
sessoes_abertas %>% ggplot(aes(x = horario)) + geom_bar() # 14h as 16h é o horário de pico
sessoes_abertas %>% ggplot(aes(x = lab)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = turno)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = hora_pura)) + geom_bar() # ao contrario do que se esperava,
lcc2_acesso <- sessoes_abertas %>% filter(lab == "lcc2")
lcc2_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar()
lcc1_acesso <- sessoes_abertas %>% filter(lab == "lcc1")
lcc1_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar() # maior quantudade de acesso as 14 hrs
lcc1_acesso %>% ggplot(aes(x = dia_da_semana)) + geom_bar()
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
acessos_usuarios <- sessoes_abertas %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
sessoes_por_maquina <- sessoes_abertas %>% subset(select=c("maquina"))
acessos_maquinas <- sessoes_por_maquina %>% group_by(maquina) %>% summarise(num_acessos = n())
acessos_maquinas <- acessos_maquinas[order(acessos_maquinas$num_acessos,decreasing = T),] # As do começo do lcc2
teste <- super %>% subset(select = c("usuario","lab"))# Seleciona apenas os atributos que me interessam
teste <- teste %>% group_by(usuario,lab) %>% summarise(num_acessos = n()) # Sumarizo os acessos
a <- teste %>% filter(lab == "lcc1") # Filtro de acordo com o meu interesse
names(a)[3] <- c("lcc1") # Nomeio a coluna
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario") # Agrupo com o dataframe principal
a <- teste %>% filter(lab == "lcc2")
names(a)[3] <- c("lcc2")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Seg")
names(a)[3] <- c("Seg")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(dia_da_semana == "Ter")
names(a)[3] <- c("Ter")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(dia_da_semana == "Qua")
names(a)[3] <- c("Qua")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(dia_da_semana == "Qui")
names(a)[3] <- c("Qui")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(dia_da_semana == "Sex")
names(a)[3] <- c("Sex")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "06-08")
names(a)[3] <- c("06h-08h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(horario == "08-10")
names(a)[3] <- c("08h-10h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(horario == "10-12")
names(a)[3] <- c("10h-12h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(horario == "12-13")
names(a)[3] <- c("12h-14h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(horario == "14-16")
names(a)[3] <- c("14h-16h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(horario == "16-18")
names(a)[3] <- c("16h-18h")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
a <- teste %>% filter(horario == "18h+")
names(a)[3] <- c("18h+")
acessos_usuarios <- full_join(acessos_usuarios,a[-2], by = "usuario")
acessos_usuarios[,1:16][is.na(acessos_usuarios[,1:16])] <- 0 # Substituindo os NA por zero
dataKmeans <- acessos_usuarios %>% subset(select = c("num_acessos","06h-08h","08h-10h","10h-12h","12h-14h","14h-16h","16h-18h","18h+")) # filtrando para apenas número de acessos e horários
mediana_acessos <- dataKmeans %>% mutate(Mediana = median(num_acessos))
mediana_acessos %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
distancia = as.matrix(dist(dataKmeans)) # Matriz de dissimilaridade
clus <- kmeans(dataKmeans,centers = 2)
sil1 <- mean(silhouette(clus$cluster,dmatrix = distancia^2)[,3]) # Silhouette com 2 centros
dataSil <- data.frame(centros = 2,distSil = sil1)
for(i in 3:10){ # Silhouette de 3 a 10 centros
set.seed(10)
clus = kmeans(dataKmeans,centers = i)
sill <- mean(silhouette(clus$cluster,dmatrix = distancia^2)[,3])
dfAux <-  data.frame(centros = i,distSil = sill)
dataSil <- rbind(dataSil,dfAux)
}
dataSil %>% ggplot(aes(x = centros,y = distSil)) + geom_line() # plotando o gráfico
clus <- kmeans(dataKmeans,centers = 2) # kmeans com 2 centros
clus$centers # Verificando os centros
table(clus$cluster) # Vendo quantos pontos estão em cada grupo
clusplot(dataKmeans,clus$cluster,color = T,shade = T) # plotando o gráfico do kmeans
clus$withinss
summary(dataKmeans) # Verificando média,mediana e quartis
dadosMenores = dataKmeans %>% filter(num_acessos <= 10) # Filtrando o acesso até o 3 quartil
mediana_acessosMenores <- dadosMenores %>% mutate(Mediana = median(num_acessos))
mediana_acessosMenores %>% ggplot(aes(x = Mediana, y = num_acessos)) + geom_boxplot(alpha = 1/8, na.rm = T)
distancia = as.matrix(dist(dadosMenores)) # Matriz de dissimilaridade
clus2 <- kmeans(dadosMenores,centers = 2)
sil11 <- mean(silhouette(clus2$cluster,dmatrix = distancia^2)[,3]) # Silhouette com 2 centros
dfSil <- data.frame(centros = 2,distS = sil11)
set.seed(12)
for(i in 3:10){ # Silhouette de 3 a 10 centros
clus2 = kmeans(dadosMenores,centers = i)
silT <- mean(silhouette(clus2$cluster,dmatrix = distancia^2)[,3])
df2 <-  data.frame(centros = i,distS = silT)
dfSil <- rbind(dfSil,df2)
}
dfSil %>% ggplot(aes(x = centros,y = distS)) + geom_line() # plotando o gráfico
clus2 <- kmeans(dadosMenores, centers = 2) # kmeans desse df com 2 centros
clusplot(dadosMenores,clus2$cluster,color = T, shade = T) # Plotagem do kmeans
table(clus2$cluster) # Quantidade de usuários em cada cluster
clus2$centers # Verificando os dados dos centros
acessoCluster1 <- kGmedian(dataKmeans, ncenters=2)
plot(dataKmeans, col = acessoCluster1$cluster, main="kmedian")
points(acessoCluster1$centers, col = 1:2, pch = 8, cex = 2)
acessoCluster1$centers
acessoCluster1$size
super <- super %>% group_by(usuario) %>% mutate(n_acessos=n()) # adicionando a coluna n_acessos no super
dadosUmAcesso <- super %>% group_by(usuario) %>% filter(n_acessos == 1) # filtando usuários com apenas um acesso
dadosUmAcesso %>% ggplot(aes(x = dia_do_mes)) + geom_bar() # plotando dia do mês
dadosUmAcesso %>% ggplot(aes(x = dia_da_semana)) + geom_bar() # plotando dia da semana
dadosUmAcesso %>% ggplot(aes(x = lab)) + geom_bar() # plotando lab
dadosUmAcesso %>% ggplot(aes(x = horario)) + geom_bar() # plotando horário(blocos de 2 horas)
hist(acessos_usuarios$num_acessos,main = "Histograma do número de acessos", xlab = "Número de acessos", ylab = "Frequência") # Histograma dos acessos
maioria = acessos_usuarios %>% filter(num_acessos <= 10) # Filtrando os usuários com até 10 acessos
dias <- data.frame(dia = c("Segunda","Terca","Quarta","Quinta","Sexta"), acessos = c(sum(maioria$Seg),sum(maioria$Ter),sum(maioria$Qua),sum(maioria$Qui),sum(maioria$Sex)))
dias$dia <- factor(dias1$dia, levels = dias$dia[order(dias$acessos)]) #faz com que o plot seja na ordem da coluna dia do data frame
horarios <- data.frame(hora = c("06h-08h","08h-10h","10h-12h","12h-14h","14h-16h","16h-18h","18h+"), acessos = c(sum(maioria$`06h-08h`),sum(maioria$`08h-10h`),sum(maioria$`10h-12h`),sum(maioria$`12h-14h`),sum(maioria$`14h-16h`),sum(maioria$`16h-18h`),sum(maioria$`18h+`)))
dias %>% ggplot(aes(x = dia,y = acessos)) + theme_bw() + geom_bar(stat = "identity")
horarios %>% ggplot(aes(x = hora,y = acessos)) + geom_bar(stat = "identity")
usuarios <- dados
usuarios <- usuarios %>% mutate(hora_pura = hour(usuarios$hora))
usuarios <- usuarios[order(usuarios$usuario),]
tempo_sessao <- as.data.frame(matrix(nrow = 3570, ncol = 5))
indice = 1
for( i in 1:7618) {
tempo_sessao[indice,3] <- usuarios[i,"dia_da_semana"]
if(usuarios[i+1,"status"] == "closed" && usuarios[i,"status"] == "opened") {
if(usuarios[i+1,"usuario"] == usuarios[i,"usuario"]){
tempo_sessao[indice,1] <- round(as.numeric((usuarios[i+1,"hora"] - usuarios[i,"hora"]) / 60), 3)
tempo_sessao[indice,2] <- usuarios[i+1,"usuario"]
tempo_sessao[indice,4] <- usuarios[i,"hora_pura"]
tempo_sessao[indice,5] <- usuarios[i+1,"hora_pura"]
indice = indice + 1
i = i + 1
}
else {
if(usuarios[i,"status"] == "opened") {
tempo_sessao[indice,4] <- usuarios[i,"hora_pura"]
} else {
tempo_sessao[indice,5] <- usuarios[i+1,"hora_pura"]
}
indice = indice + 1
}
}
}
tempo_sessao <- tempo_sessao %>% na.omit %>% rename("tempo" = V1, "usuario" = V2, "dia" = V3, "hora_inicio" = V4, "hora_fim" = V5)
boxplot(tempo_sessao$tempo, data = tempo_sessao)
boxplot(tempo~hora_inicio, data = tempo_sessao)
boxplot(tempo~dia, data = tempo_sessao)
carac_sessoes <- full_join(tempo_sessao, acessos_usuarios, by = "usuario")
carac_sessoes <- carac_sessoes %>% group_by(usuario) %>% mutate(tempo_total = sum(tempo/60), mediana_tempo = median(tempo/60), media_tempo = mean(tempo/60))
sem_outlier <- carac_sessoes %>% mutate(num_acessos = ifelse(num_acessos <= 25,NA,num_acessos)) %>% na.omit()
sem_outlier %>% ggplot(aes(num_acessos, mediana_tempo)) + geom_point()
View(super)
