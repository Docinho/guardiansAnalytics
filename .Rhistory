}
i <- 0
while(i < length(vetor)){
print(vetor[i])
i <- i + 1
}
i <- 0
while(i <= length(vetor)){
print(vetor[i])
i <- i + 1
}
print(vetor[i])
for(i in 1:length(vetor)){
print(vetor[i])
}
for(i in 1:length(vetor)){
if(vetor[i] == 5){
break
}
print(vetor[i])
}
for(i in vetor){
if(i == 4){
next
}
print(vetor[i])
}
for(i in vetor){
if(i == 4){
next()
}
print(vetor[i])
}
rm(list = ls())
date() # Função padrão
d <- as.Date("2017-10-05")
d <- as.Date("05/11/2017")
d
d <- as.Date("5/11/2017")
d
date() # Função padrão
d <- as.Date("5/11/17")
d
d2 <- as.Date("3/10/17")
d2
d - d2
d2 <- as.Date("3/11/17")
d2
d - d2
format(d,format ="%y-%m-&d")
format(d,format ="%y-%m-%d")
format(d2, format = "%A de %d de %B de %Y")
format(d2, format = "%A de %d de %B de %y")
format(d2, format = "%A de %d de %B de %Y")
rm(list = ls())
vetor <- c(1:10)
max(vetor)
min(vetor)
length(vetor)
sd(vetor)
sort(vetor) # Ordena o vetor do menor para o maior
sort(vetor,decreasing = T)
sort(vetor,decreasing = T) # Ordena o vetor do maior para o menor
order(vetor)
order(vetor) # Retorna os índices de cada elemento do vetor
matrix(1:12,ncol = 4)
dim(matrix())
m <- matrix(1:12,ncol = 4)
dim(m)
cars
mean(cars)
mean(cars$speed)
attach(cars)
mean(speed)
mean(dist)
detach(cars)
detach(cars) # Desfixa o banco de dados
with(cars,mean(speed))
with(cars,mean(speed),mean(dist) # Mesmo resultado prático do attach, só que sem precisar fixar
with(cars,mean(speed),mean(dist)) # Mesmo resultado prático do attach, só que sem precisar fixar
with(cars,mean(speed)) # Mesmo resultado prático do attach, só que sem precisar fixar
a <- seq(from = 1, to = 10 , by = 2)
a
a <- seq(from = 1, to = 10 , by = 2) # Cria uma sequência de 1 até 10 com intervalo de 2 em 2
a
b <- seq(from = 1, to = 100 , by = 10)
b
b <- seq(from = 0, to = 100 , by = 10)
b
b <- seq(from = 0, to = 100 , by = 10) # Cria uma sequência de 0 até 100 com intervalo de 10 em 10
b
length(a)
length(b)
v <- scan()
v
tabela <- read.table(file.choose(), sep = ";", dec = ".", header = T)
rm(list = ls())
head(cars)
tail(cars)
head(cars,n = 4L)
summary(cars)
colnames(USArrests)
rownames(USArrests)
cumsum(AirPassengers)
apply(cars,1,mean)
apply(USPersonalExpenditure,1,mean)
apply(USPersonalExpenditure,2,mean)
apply(USPersonalExpenditure,3,mean)
apply(USPersonalExpenditure,2,mean)
USPersonalExpenditure
apply(USPersonalExpenditure,1,mean)
apply(USPersonalExpenditure,2,mean) # Retorna a média das colunas
table(infert$age,infert$induced)
sample(10)
sample(1:100,size = 10,replace = T)
sample(1:10,size = 11,replace = T)
sample(1:10,size = 10,replace = F)
set.seed(123)
sample(1:10,size = 10,replace = F)
sample(1:10,size = 10,replace = F) # Gera 10 números aleatórios no intervalo de 1 a 10 sem repetição
set.seed(123)
sample(1:10,size = 10,replace = F)
mean(rivers)
mean(cars$speed) # Retorna a média
median(cars$dist)
sd(cars$speed)
var(cars$dist)
distNorm <- rnorm(10,mean = 10,sd = 1)
distNorm
distPoi <- rpois(10,lambda = 4)
distPoi
distBi <- pbinom(c(7,9,11,15), size = 15, prob = 0.5)
distBi
shapiro.test(distNorm)
cor(women$height,women$weight)
modLn <- lm(women$height~women$weight)
modLn
plot(women$height~women$weight)
abline(modLn)
rm(listo)
rm(list = ls())
iris
dim(iris)
amostra <- sample(c(0,1),150,replace = T,prob = c(0.5,0.5))
amostra
analise <- iris[amostra,]
analise
dim(analise)
iris
dim(iris)
amostra <- sample(c(0,1),150,replace = T,prob = c(0.5,0.5))
amostra
for(i in 1:length(amostra)){
if(amostra[i] == 1){
rbind(iris[i])
}
}
for(i in 1:length(amostra)){
if(amostra[i] == 1){
rbind(iris[i,])
}
}
for(i in 1:length(amostra)){
if(amostra[i] == 1){
analise = rbind(iris[i,])
}
}
analise
analise <- []
analise <- rbind(iris[1,])
for(i in 1:length(amostra)){
if(amostra[i] == 1){
analise = rbind(iris[i,])
}
}
analise
amostra
analise <- rbind(iris[1,])
for(i in 1:length(amostra)){
if(amostra[i] == 1){
analise = rbind(analise,iris[i,])
}
}
analise
amostra <- sample(c(0,1),150,replace = T,prob = c(0.5,0.5)) # Criando um vetor aleatório de 0 e 1
amostra
for(i in 1:length(amostra)){
if(amostra[i] == 1){
analise = rbind(analise,iris[i,])
}
}
analise
typeof(analise)
is.data.frame(analise)
sort(analise)
colnome <- c("Ind","Sepal lenght","Sepal width","Petal lenght","Petal width","Species")
colnames(analise) <- colnome
colnome <- c("Sepal lenght","Sepal width","Petal lenght","Petal width","Species")
colnames(analise) <- colnome
analise
analise[1,1]
?mutate
??mutate
install.packages(rcongresso)
"rcongresso"
rcongresso
rm(list = ls())
library(tidyverse)
library(readr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(cluster) # Adicionei pra plotar o kmeans
library(fpc) # Adicionei pra plotar o kmeans
setwd("/Users/amandaluna/Documents/guardiansAnalytics") # workspace Amanda
dados <- read_csv("logs.txt", col_names = c("mes", "dia_do_mes", "hora", "maquina", "status", "usuario"))
dados <- dados %>% mutate(data = paste("2017", mes, dia_do_mes, sep = "-"), dia_da_semana = wday(data, label = T))
sessoes_abertas <- dados %>% filter(status == "opened")
super <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
super <- super %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
super <- super %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:14, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 18:24, "18h+", "06-08"))))))
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
super <- super %>% mutate(lab = r$lab)
lab <- super
lab<- lab %>% group_by(lab, usuario) %>% mutate(n_acessos=n()) #%>%
inner_join(lab, by='usuario')
lab
sessoes <- sessoes_abertas %>% subset(select=c("dia_da_semana", "dia_do_mes"))
freq_dia <- sessoes %>% group_by(dia_da_semana, dia_do_mes) %>% summarise(num_acessos = n())
freq_dia %>% ggplot(aes(x = dia_do_mes, y = num_acessos, fill = dia_da_semana)) + geom_bar(stat = "identity")
freq_mensal <- freq_dia %>% group_by(dia_da_semana) %>% summarise(media_acessos = mean(num_acessos)) # Os mts de lp1 não estão computados
freq_mensal %>% ggplot(aes(x = dia_da_semana, y = media_acessos)) + geom_bar(stat = "identity")
r <- setNames(do.call(rbind.data.frame, strsplit(sessoes_abertas$maquina, "-")), c("lab", "maquina"))
sessoes_abertas <- sessoes_abertas %>% mutate(lab = r$lab)
sessoes_abertas <- sessoes_abertas %>% mutate(hora_pura = hour(sessoes_abertas$hora))
sessoes_abertas <- sessoes_abertas %>% mutate(turno = if_else(hora_pura %in% 05:11, "manha",
if_else(hora_pura %in% 12:17, "tarde",
if_else(hora_pura %in% 18:24, "noite", "madrugada"))))
sessoes_abertas <- sessoes_abertas %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:13, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 18:24, "18h+", "06-08"))))))
sessoes_abertas %>% ggplot(aes(x = horario)) + geom_bar() # 14h as 16h é o horário de pico
sessoes_abertas %>% ggplot(aes(x = lab)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = turno)) + geom_bar()
sessoes_abertas %>% ggplot(aes(x = hora_pura)) + geom_bar() # ao contrario do que se esperava,
lcc2_acesso <- sessoes_abertas %>% filter(lab == "lcc2")
lcc2_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar()
lcc1_acesso <- sessoes_abertas %>% filter(lab == "lcc1")
lcc1_acesso %>% ggplot(aes(x = hora_pura)) + geom_bar() # maior quantudade de acesso as 14 hrs
lcc1_acesso %>% ggplot(aes(x = dia_da_semana)) + geom_bar()
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
acessos_usuarios <- coiso2 %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
sessoes_por_maquina <- sessoes_abertas %>% subset(select=c("maquina"))
acessos_maquinas <- sessoes_por_maquina %>% group_by(maquina) %>% summarise(num_acessos = n())
acessos_maquinas <- acessos_maquinas[order(acessos_maquinas$num_acessos,decreasing = T),] # As do começo do lcc2
teste <- super %>% subset(select = c("usuario","lab"))
teste <- teste %>% group_by(usuario,lab) %>% summarise(num_acessos = n())
a <- teste %>% filter(lab == "lcc1")
names(a)[3] <- c("lcc1")
a[,"lcc2"] <- f
b <- teste %>% filter(lab == "lcc2")
names(b)[3] <- c("lcc2")
b[,"lcc1"] <- f
f <- rep(0,nrow(b))
coiso2 <- bind_rows(a,b)
unique(coiso2$usuario)
tabela <- full_join(a,b,by = "usuario")
acessos_usuarios <- mutate(coiso2)
acessos_usuarios <- acessos_usuarios %>% group_by(usuario) %>% mutate(n_acessos=n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$n_acessos,decreasing = T),]
View(tabela)
tabela[,3][tabela[,3] == NA] <- 0
View(tabela)
tabela[,3][is.na(tabela[,3])] <- 0
View(tabela)
tabela[,5][is.na(tabela[,5])] <- 0
View(tabela)
tabela<- tabela[,-2]
View(tabela)
tabela<- tabela[,-3]
View(tabela)
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
acessos_usuarios <- coiso2 %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
acessos_usuarios <- full_join(acessos_usuarios,tabela, by = "usuario")
View(acessos_usuarios)
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
acessos_usuarios <- coiso2 %>% group_by(usuario) %>% summarise(num_acessos = n())
acessos_usuarios <- acessos_usuarios[order(acessos_usuarios$num_acessos,decreasing = T),]
View(acessos_usuarios)
sessoes_por_usuario <- sessoes_abertas %>% subset(select=c("usuario"))
View(sessoes_por_usuario)
acessos_usuarios <- sessoes_abertas %>% group_by(usuario) %>% summarise(num_acessos = n())
View(acessos_usuarios)
acessos_usuarios <- full_join(acessos_usuarios,tabela, by = "usuario")
View(acessos_usuarios)
View(super)
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
View(teste)
a <- teste %>% filter(dia_da_semana == "Mon")
View(a)
names(a)[3] <- c("segunda")
View(a)
a <- a[,-2]
View(a)
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
View(acessos_usuarios)
acessos_usuarios[,5][is.na(tabela[,5])] <- 0
acessos_usuarios[,5][is.na(acessos_usuarios[,5])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Tues")
names(a)[3] <- c("terça")
a <- a[,-2]
View(a)
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Tues")
View(a)
names(a)[3] <- c("terça")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,6][is.na(acessos_usuarios[,6])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Wed")
names(a)[3] <- c("quarta")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,7][is.na(acessos_usuarios[,7])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Thurs")
names(a)[3] <- c("quinta")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,8][is.na(acessos_usuarios[,8])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","dia_da_semana"))
teste <- teste %>% group_by(usuario,dia_da_semana) %>% summarise(num_acessos = n())
a <- teste %>% filter(dia_da_semana == "Fri")
names(a)[3] <- c("sexta")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,9][is.na(acessos_usuarios[,9])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","hora_pura"))
teste <- teste %>% group_by(usuario,hora_pura) %>% summarise(num_acessos = n())
teste <- teste[order(teste$hora_pura,decreasing = T),]
View(teste)
teste <- teste[order(teste$hora_pura,decreasing = F),]
View(teste)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
View(teste)
a <- teste %>% filter(horario == "06-08")
View(a)
names(a)[3] <- c("6h-8h")
a <- a[,-2]
View(a)
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,10][is.na(acessos_usuarios[,10])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "08-10")
View(a)
names(a)[3] <- c("6h-8h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,10][is.na(acessos_usuarios[,10])] <- 0
View(acessos_usuarios)
names(acessos_usuarios)[10] <- "6h-8h"
View(acessos_usuarios)
names(a)[3] <- c("8h-10h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,11][is.na(acessos_usuarios[,11])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "08-10")
names(a)[3] <- c("8h-10h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,11][is.na(acessos_usuarios[,11])] <- 0
View(acessos_usuarios)
acessos_usuarios <- acessos_usuarios[,-11]
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "10-12")
names(a)[3] <- c("10h-12h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,12][is.na(acessos_usuarios[,12])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "12-13")
names(a)[3] <- c("12h-14h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,12][is.na(acessos_usuarios[,12])] <- 0
acessos_usuarios <- acessos_usuarios[,-12]
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "12-13")
names(a)[3] <- c("12h-14h")
a <- a[,-2]
acessos_usuarios[,13][is.na(acessos_usuarios[,13])] <- 0
View(acessos_usuarios)
acessos_usuarios[,12][is.na(acessos_usuarios[,12])] <- 0
View(acessos_usuarios)
acessos_usuarios[,11][is.na(acessos_usuarios[,11])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "14-16")
names(a)[3] <- c("14h-16h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,12][is.na(acessos_usuarios[,12])] <- 0
View(acessos_usuarios)
acessos_usuarios[,13][is.na(acessos_usuarios[,13])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "18h+")
names(a)[3] <- c("18h+")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,14][is.na(acessos_usuarios[,14])] <- 0
View(acessos_usuarios)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "14-16")
View(a)
View(a)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "10-12")
names(a)[3] <- c("10h-12h")
a <- a[,-2]
acessos_usuarios[,15][is.na(acessos_usuarios[,15])] <- 0
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "10-12")
names(a)[3] <- c("10h-12h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,15][is.na(acessos_usuarios[,15])] <- 0
View(acessos_usuarios)
View(acessos_usuarios)
dataKmeans <- acessos_usuarios %>% select(usuario,num_acessos,lcc1,lcc2,segunda,terça,quarta,quinta,sexta,`6h-8h`,`8h-10h`,`10h-12h`,`12h-14h`,`14h-16h`,`16h-18h`,`18h+`)
View(super)
dataKmeans <- acessos_usuarios %>% select(usuario,num_acessos,lcc1,lcc2,segunda,terça,quarta,quinta,sexta,`6h-8h`,`8h-10h`,`10h-12h`,`12h-14h`,`14h-16h`,`18h+`)
View(dataKmeans)
View(dataKmeans)
View(sessoes_abertas)
sessoes_abertas <- sessoes_abertas %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:13, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
View(sessoes_abertas)
super <- super %>% mutate(horario = if_else(hora_pura %in% 08:09, "08-10", # 14h as 16h maior pico
if_else(hora_pura %in% 10:11, "10-12",
if_else(hora_pura %in% 12:14, "12-13",
if_else(hora_pura %in% 14:15, "14-16",
if_else(hora_pura %in% 16:17, "16-18",
if_else(hora_pura %in% 18:24, "18h+", "06-08")))))))
View(super)
View(super)
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "16-18")
names(a)[3] <- c("16h-18h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,16][is.na(acessos_usuarios[,16])] <- 0
dataKmeans <- acessos_usuarios %>% select(usuario,num_acessos,lcc1,lcc2,segunda,terça,quarta,quinta,sexta,`6h-8h`,`8h-10h`,`10h-12h`,`12h-14h`,`14h-16h`,`16h-18h`,`18h+`)
View(dataKmeans)
acessos_usuarios <- acessos_usuarios[,-10]
teste <- super %>% subset(select = c("usuario","horario"))
teste <- teste %>% group_by(usuario,horario) %>% summarise(num_acessos = n())
a <- teste %>% filter(horario == "06-08")
names(a)[3] <- c("6h-8h")
a <- a[,-2]
acessos_usuarios <- full_join(acessos_usuarios,a, by = "usuario")
acessos_usuarios[,16][is.na(acessos_usuarios[,16])] <- 0
View(acessos_usuarios)
dataKmeans <- acessos_usuarios %>% select(usuario,num_acessos,lcc1,lcc2,segunda,terça,quarta,quinta,sexta,`6h-8h`,`8h-10h`,`10h-12h`,`12h-14h`,`14h-16h`,`16h-18h`,`18h+`)
View(dataKmeans)
